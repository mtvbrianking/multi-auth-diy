name: run-tests

on: [push, pull_request]

jobs:

  tests:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        php: [8.2, 8.3]
        laravel: [^11.0]
        include:
          - laravel: ^11.0
            testbench: 9.0.2

    name: P ${{ matrix.php }} L ${{ matrix.laravel }} T ${{ matrix.testbench }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, pcov
          tools: composer:v2

      - name: Get composer cache dir
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer deps
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install composer deps
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --dev --no-interaction --no-progress --no-update
          composer update --prefer-dist --no-interaction --no-progress

      - name: Create MySQL database
        run: |
            sudo systemctl start mysql
            mysql -u root -proot -e 'CREATE DATABASE IF NOT EXISTS laravel;'

      - name: Prepare Application
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Setup NodeJS
        uses: actions/setup-node@v4

      - name: Setup the frontend
        run: |
          yarn install
          yarn build

      - name: Run tests
        env:
          DB_PASSWORD: root
        run: vendor/bin/pest
